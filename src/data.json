{
    "1": {
        "wsdl": {
            "challenges": [
                "The most challenging concept is WSDL.",
                "WSDL and SOAP based web services"
            ],
            "outcomes": [
                "the most significant concept I learned through the lecture notes are SOAP Web Services, SOAP-based architecture, and WSDL",
                "WSDL topic"
            ],
            "frequency": {
                "challenges": 2,
                "outcomes": 2
            }
        },
        "soa": {
            "challenges": [
                "The step by step approach to developing quality Service-Oriented Architecture (SOA), though this concept is yet to be explained."
            ],
            "outcomes": [
                "Differentiating Service-Oriented Architecture (SOA) from the order computer applications.",
                "SOA and its benefits",
                "Service Oriented Architecture (SOA) is a new concept for me. The Web Services portion really helped me understand SOA as well.",
                "I found SOA interesting."
            ],
            "frequency": {
                "challenges": 1,
                "outcomes": 4
            }
        },
        "soap": {
            "challenges": [
                "WSDL and SOAP based web services",
                "The concepts of SOAP and REST. I've heard of both throughout numerous job descriptions for Web Developers, however, I never learned about them.",
                "The concepts weren't really challenging to understand but learning about SOAP Web Service was new and it took more time to understand as opposed to the other concepts discussed in the chapter."
            ],
            "outcomes": [
                "the most significant concept I learned through the lecture notes are SOAP Web Services, SOAP-based architecture, and WSDL",
                "Learning about SOAP and how it works. I had used REST APIs, but not the SOAP nor the WSDL",
                "The difference between a SOAP and REST web service. The web application I work on utilizes XML documents sometimes and I wasn't sure what the use was for. I definitely prefer REST as it's what I understand and work on for the most part.",
                "For the first time, I've begun to understand the relationship and differences between REST and SOAP, that they conceptually provide a comparable function within programming, but that REST communicates largely through the URL while SOAP uses XML within a SOAP envelope, within HTTP. I also began to get some understanding of SOAP. These understanding were largely from external reading necessary to understand the slides.",
                "The presentation easily explained what web services are and the use cases. I like the detailed explanation of Simple Object Access Protocol (SOAP). When I tried to understand SOAP architecture in the past, it was not successful. However, your presentation's SOAP use scenario, components, and example helped me to fully understand what is SOAP architecture. Another interesting concept was that web services are a type of API (I did not aware of that before.)",
                "Web services. SOAP and REST services and difference between them.",
                "SOAP usage scenario and SOAP message components"
            ],
            "frequency": {
                "challenges": 3,
                "outcomes": 7
            }
        },
        "web_service": {
            "challenges": [
                "WSDL and SOAP based web services",
                "Right now, these ideas are almost completely abstract. For example, I searched for \"10 examples of web service implementation\" to get a better understanding of what to expect, complexity of the necessary code, whether systems are in place to create the interface without having to do the coding myself. The closest I could find was a list with a paragraph describing the functionality of the services, which helped. What I would have to do is still a bit of a mystery.",
                "The concepts weren't really challenging to understand but learning about SOAP Web Service was new and it took more time to understand as opposed to the other concepts discussed in the chapter."
            ],
            "outcomes": [
                "Service Oriented Architecture (SOA) is a new concept for me. The Web Services portion really helped me understand SOA as well.",
                "The presentation easily explained what web services are and the use cases. I like the detailed explanation of Simple Object Access Protocol (SOAP). When I tried to understand SOAP architecture in the past, it was not successful. However, your presentation's SOAP use scenario, components, and example helped me to fully understand what is SOAP architecture. Another interesting concept was that web services are a type of API (I did not aware of that before.)",
                "Web services. SOAP and REST services and difference between them.",
                "The most interesting was just learning the principles of SOAP Web services. I developed WCF and REST Web services in the past for work or school but know the ins and out makes everything click a little better for me.",
                "The most interesting concept I learned in this lecture was the difference between a simple web page or website as compared to a web service. When we are looking at a web page, we are interacting with a user interface, however, for a web service, it is an Application Programming Interface (API). If we are using a browser, web pages use HTML to display information, while a web service uses JSON. In practice, however, web services are used by applications instead of browsers.",
                "Understanding what Web Services is. I always misquoted it."
            ],
            "frequency": {
                "challenges": 3,
                "outcomes": 6
            }
        },
        "interface": {
            "challenges": [
                "Right now, these ideas are almost completely abstract. For example, I searched for \"10 examples of web service implementation\" to get a better understanding of what to expect, complexity of the necessary code, whether systems are in place to create the interface without having to do the coding myself. The closest I could find was a list with a paragraph describing the functionality of the services, which helped. What I would have to do is still a bit of a mystery."
            ],
            "outcomes": [
                "The most interesting concept I learned in this lecture was the difference between a simple web page or website as compared to a web service. When we are looking at a web page, we are interacting with a user interface, however, for a web service, it is an Application Programming Interface (API). If we are using a browser, web pages use HTML to display information, while a web service uses JSON. In practice, however, web services are used by applications instead of browsers."
            ],
            "frequency": {
                "challenges": 1,
                "outcomes": 1
            }
        },
        "rest": {
            "challenges": [
                "The concepts of SOAP and REST. I've heard of both throughout numerous job descriptions for Web Developers, however, I never learned about them."
            ],
            "outcomes": [
                "Learning about SOAP and how it works. I had used REST APIs, but not the SOAP nor the WSDL",
                "The difference between a SOAP and REST web service. The web application I work on utilizes XML documents sometimes and I wasn't sure what the use was for. I definitely prefer REST as it's what I understand and work on for the most part.",
                "For the first time, I've begun to understand the relationship and differences between REST and SOAP, that they conceptually provide a comparable function within programming, but that REST communicates largely through the URL while SOAP uses XML within a SOAP envelope, within HTTP. I also began to get some understanding of SOAP. These understanding were largely from external reading necessary to understand the slides.",
                "The most interesting was just learning the principles of SOAP Web services. I developed WCF and REST Web services in the past for work or school but know the ins and out makes everything click a little better for me."
            ],
            "frequency": {
                "challenges": 1,
                "outcomes": 4
            }
        },
        "plugin": {
            "challenges": [
                "Understanding the WSDL and UDDL concepts were challenging to understand for me. The external documents helped me to understand the concept of WSDL, but I was failed to follow the demo section (Consuming a Web Service using CXF slide). I did create a Maven project and added all dependencies and plugins in the pom.xml file just like the slides shows. However, when I load the Maven project, no source code is generated. I will research further on the \"cxf-codegen-plugin\" to fix my issue."
            ],
            "outcomes": [],
            "frequency": {
                "challenges": 1,
                "outcomes": 0
            }
        },
        "application": {
            "challenges": [
                "Distributed Applications"
            ],
            "outcomes": [
                "Differentiating Service-Oriented Architecture (SOA) from the order computer applications.",
                "The difference between a SOAP and REST web service. The web application I work on utilizes XML documents sometimes and I wasn't sure what the use was for. I definitely prefer REST as it's what I understand and work on for the most part.",
                "The most interesting concept I learned in this lecture was the difference between a simple web page or website as compared to a web service. When we are looking at a web page, we are interacting with a user interface, however, for a web service, it is an Application Programming Interface (API). If we are using a browser, web pages use HTML to display information, while a web service uses JSON. In practice, however, web services are used by applications instead of browsers."
            ],
            "frequency": {
                "challenges": 1,
                "outcomes": 3
            }
        },
        "achitecture": {
            "challenges": [
                "Service Oriented Achitecture"
            ],
            "outcomes": [],
            "frequency": {
                "challenges": 1,
                "outcomes": 0
            }
        },
        "architecture": {
            "challenges": [],
            "outcomes": [
                "the most significant concept I learned through the lecture notes are SOAP Web Services, SOAP-based architecture, and WSDL",
                "The presentation easily explained what web services are and the use cases. I like the detailed explanation of Simple Object Access Protocol (SOAP). When I tried to understand SOAP architecture in the past, it was not successful. However, your presentation's SOAP use scenario, components, and example helped me to fully understand what is SOAP architecture. Another interesting concept was that web services are a type of API (I did not aware of that before.)"
            ],
            "frequency": {
                "challenges": 0,
                "outcomes": 2
            }
        },
        "xml": {
            "challenges": [],
            "outcomes": [
                "The difference between a SOAP and REST web service. The web application I work on utilizes XML documents sometimes and I wasn't sure what the use was for. I definitely prefer REST as it's what I understand and work on for the most part.",
                "For the first time, I've begun to understand the relationship and differences between REST and SOAP, that they conceptually provide a comparable function within programming, but that REST communicates largely through the URL while SOAP uses XML within a SOAP envelope, within HTTP. I also began to get some understanding of SOAP. These understanding were largely from external reading necessary to understand the slides."
            ],
            "frequency": {
                "challenges": 0,
                "outcomes": 2
            }
        },
        "http": {
            "challenges": [],
            "outcomes": [
                "For the first time, I've begun to understand the relationship and differences between REST and SOAP, that they conceptually provide a comparable function within programming, but that REST communicates largely through the URL while SOAP uses XML within a SOAP envelope, within HTTP. I also began to get some understanding of SOAP. These understanding were largely from external reading necessary to understand the slides."
            ],
            "frequency": {
                "challenges": 0,
                "outcomes": 1
            }
        },
        "soap_envelope": {
            "challenges": [],
            "outcomes": [
                "For the first time, I've begun to understand the relationship and differences between REST and SOAP, that they conceptually provide a comparable function within programming, but that REST communicates largely through the URL while SOAP uses XML within a SOAP envelope, within HTTP. I also began to get some understanding of SOAP. These understanding were largely from external reading necessary to understand the slides."
            ],
            "frequency": {
                "challenges": 0,
                "outcomes": 1
            }
        },
        "object": {
            "challenges": [],
            "outcomes": [
                "The presentation easily explained what web services are and the use cases. I like the detailed explanation of Simple Object Access Protocol (SOAP). When I tried to understand SOAP architecture in the past, it was not successful. However, your presentation's SOAP use scenario, components, and example helped me to fully understand what is SOAP architecture. Another interesting concept was that web services are a type of API (I did not aware of that before.)"
            ],
            "frequency": {
                "challenges": 0,
                "outcomes": 1
            }
        },
        "api": {
            "challenges": [],
            "outcomes": [
                "The presentation easily explained what web services are and the use cases. I like the detailed explanation of Simple Object Access Protocol (SOAP). When I tried to understand SOAP architecture in the past, it was not successful. However, your presentation's SOAP use scenario, components, and example helped me to fully understand what is SOAP architecture. Another interesting concept was that web services are a type of API (I did not aware of that before.)"
            ],
            "frequency": {
                "challenges": 0,
                "outcomes": 1
            }
        },
        "rest_service": {
            "challenges": [],
            "outcomes": [
                "Web services. SOAP and REST services and difference between them."
            ],
            "frequency": {
                "challenges": 0,
                "outcomes": 1
            }
        },
        "wcf": {
            "challenges": [],
            "outcomes": [
                "The most interesting was just learning the principles of SOAP Web services. I developed WCF and REST Web services in the past for work or school but know the ins and out makes everything click a little better for me."
            ],
            "frequency": {
                "challenges": 0,
                "outcomes": 1
            }
        },
        "websocket": {
            "challenges": [],
            "outcomes": [
                "I'm unable to attend the Tuesday night session so I haven't seen/heard the lecture. I was surprised that webSockets and GraphQL weren't included as well considering how wide spread there use is now."
            ],
            "frequency": {
                "challenges": 0,
                "outcomes": 1
            }
        },
        "simple_web_page": {
            "challenges": [],
            "outcomes": [
                "The most interesting concept I learned in this lecture was the difference between a simple web page or website as compared to a web service. When we are looking at a web page, we are interacting with a user interface, however, for a web service, it is an Application Programming Interface (API). If we are using a browser, web pages use HTML to display information, while a web service uses JSON. In practice, however, web services are used by applications instead of browsers."
            ],
            "frequency": {
                "challenges": 0,
                "outcomes": 1
            }
        },
        "website": {
            "challenges": [],
            "outcomes": [
                "The most interesting concept I learned in this lecture was the difference between a simple web page or website as compared to a web service. When we are looking at a web page, we are interacting with a user interface, however, for a web service, it is an Application Programming Interface (API). If we are using a browser, web pages use HTML to display information, while a web service uses JSON. In practice, however, web services are used by applications instead of browsers."
            ],
            "frequency": {
                "challenges": 0,
                "outcomes": 1
            }
        },
        "json": {
            "challenges": [],
            "outcomes": [
                "The most interesting concept I learned in this lecture was the difference between a simple web page or website as compared to a web service. When we are looking at a web page, we are interacting with a user interface, however, for a web service, it is an Application Programming Interface (API). If we are using a browser, web pages use HTML to display information, while a web service uses JSON. In practice, however, web services are used by applications instead of browsers."
            ],
            "frequency": {
                "challenges": 0,
                "outcomes": 1
            }
        },
        "javascript": {
            "challenges": [],
            "outcomes": [
                "JavaScript"
            ],
            "frequency": {
                "challenges": 0,
                "outcomes": 1
            }
        },
        "service": {
            "challenges": [],
            "outcomes": [
                "The most interesting concept I learned was about the breakdown of SOAP structure. I also found the WSDL to be interesting, the idea that the service can give consumers a definition of itself and how to use it."
            ],
            "frequency": {
                "challenges": 0,
                "outcomes": 1
            }
        },
        "__participants": 20,
        "challenge_topics": [
            "soap",
            "web_service",
            "wsdl",
            "soa",
            "interface",
            "rest",
            "plugin",
            "application",
            "achitecture",
            "architecture",
            "xml",
            "http",
            "soap_envelope",
            "object",
            "api",
            "rest_service",
            "wcf",
            "websocket",
            "simple_web_page",
            "website",
            "json",
            "javascript",
            "service"
        ],
        "outcome_topics": [
            "soap",
            "web_service",
            "soa",
            "rest",
            "application",
            "wsdl",
            "architecture",
            "xml",
            "interface",
            "http",
            "soap_envelope",
            "object",
            "api",
            "rest_service",
            "wcf",
            "websocket",
            "simple_web_page",
            "website",
            "json",
            "javascript",
            "service",
            "plugin",
            "achitecture"
        ],
        "challenge_topics_freq": [
            3,
            3,
            2,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
        ],
        "outcome_topics_freq": [
            7,
            6,
            4,
            4,
            3,
            2,
            2,
            2,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            0
        ]
    },
    "2": {
        "javascript": {
            "challenges": [
                "Nothing was particularly challenging! I don't personally like JavaScript because I prefer strongly type languages so I tend to lean to Typescript more!",
                "I think the concepts discussed in this lecture such as objects and variables were pretty clear. Some of the difficult concepts I have a hard time understanding in JavaScript are Scope and Recursion.",
                "JavaScript as a whole. It's syntax confuses me."
            ],
            "outcomes": [
                "What I found important is about JSON, and JavaScript collection. I found that JSON is language-independent and serves to communicate data between networks. Java script Set collection and map are interesting as well, and I think the concept is more similar to Java. However, I noticed that Javascript is loose typing contrary to java and other object-oriented programming languages.",
                "JavaScript/ECMAScript",
                "It was refreshing and interesting to read javascript",
                "It was a great lecture on implementing WSDL and Javascript.",
                "I'm pretty familiar with javascript and functions so the history part was probably most interesting. I also didn't realize there isn't any \"official\" documentation for javascript.",
                "Javascript makes the “actions” in websites. \nIt was interesting to read about the history of JavaScript and how in 1995, JavaScript was basically the way for Netscape to beat the competition. And since Netscape was one of the most he most popular browsers at the time, other browsers started adopting their own version of javascript so that websites will work on their browsers as well. Every browser had their own idea of what javascript was and there was no standard; eventually leading to ECMAScript as the standard so that everyone had the same idea of what javascript was. I also didn't know that JavaScript and Java are not related at all and that the name was simply a marketing ploy.",
                "JavaScript Review was nice because it had important concepts to remember. I do not use it on my day to day, so this review was nice.",
                "I often have used JavaSript for developing the frontend, but I did not have a chance to look over the history of the language. The history section was interesting to me. Also, It is very interesting to know there is no official documentation about JavaScript. Also, I thought I know much about JavaScript features, but the lectures introduce features that I did not know before (such as setting the default value of a function, setting a function variable in an object, etc).",
                "JavaScript. It's not a language that I have used before."
            ],
            "frequency": {
                "challenges": 3,
                "outcomes": 9
            }
        },
        "object": {
            "challenges": [
                "I don't really see anything challenging in here, but I think it will be good to exercise with JSON object and their functions.",
                "JSON: JavaScript Object Notation"
            ],
            "outcomes": [
                "What I found important is about JSON, and JavaScript collection. I found that JSON is language-independent and serves to communicate data between networks. Java script Set collection and map are interesting as well, and I think the concept is more similar to Java. However, I noticed that Javascript is loose typing contrary to java and other object-oriented programming languages.",
                "I often have used JavaSript for developing the frontend, but I did not have a chance to look over the history of the language. The history section was interesting to me. Also, It is very interesting to know there is no official documentation about JavaScript. Also, I thought I know much about JavaScript features, but the lectures introduce features that I did not know before (such as setting the default value of a function, setting a function variable in an object, etc)."
            ],
            "frequency": {
                "challenges": 2,
                "outcomes": 2
            }
        },
        "json": {
            "challenges": [
                "I don't really see anything challenging in here, but I think it will be good to exercise with JSON object and their functions."
            ],
            "outcomes": [],
            "frequency": {
                "challenges": 1,
                "outcomes": 0
            }
        },
        "j": {
            "challenges": [
                "Yet to find out. I need to go over the lectures for more understanding, but so far, the JS concept is great."
            ],
            "outcomes": [
                "Gained a more conceptual (and therefore simpler) view of JS. I knew it had many elements of other languages, but there are only a few factors in the language itself that make it different. I feel more comfortable with my knowledge of it."
            ],
            "frequency": {
                "challenges": 1,
                "outcomes": 1
            }
        },
        "set": {
            "challenges": [
                "Set and Map Collection"
            ],
            "outcomes": [],
            "frequency": {
                "challenges": 1,
                "outcomes": 0
            }
        },
        "map": {
            "challenges": [
                "Set and Map Collection"
            ],
            "outcomes": [
                "Both Map and Set collection is are new concepts to me."
            ],
            "frequency": {
                "challenges": 1,
                "outcomes": 1
            }
        },
        "collection": {
            "challenges": [
                "Set and Map Collection"
            ],
            "outcomes": [],
            "frequency": {
                "challenges": 1,
                "outcomes": 0
            }
        },
        "closure": {
            "challenges": [
                "Closures topic"
            ],
            "outcomes": [
                "Closures",
                "It was interesting to know how closures work especially when closures have access to the outer \nfunction’s variables even after it returns, previously I thought if func. A returns func. B, the returned functions (B) cannot have access to variables that are defined in functions A, this is very subtle to understand but I am glad it was mentioned as a note point in the lecture."
            ],
            "frequency": {
                "challenges": 1,
                "outcomes": 2
            }
        },
        "rest": {
            "challenges": [
                "I struggled to understand why SOAP(complex, slow, less efficient, hard to implement) is being discussed when there is REST(popular, fast, efficient, and easy) but after doing little research I found that SOAP is more Secure and has a use case in financial transactions."
            ],
            "outcomes": [],
            "frequency": {
                "challenges": 1,
                "outcomes": 0
            }
        },
        "soap": {
            "challenges": [
                "I struggled to understand why SOAP(complex, slow, less efficient, hard to implement) is being discussed when there is REST(popular, fast, efficient, and easy) but after doing little research I found that SOAP is more Secure and has a use case in financial transactions."
            ],
            "outcomes": [],
            "frequency": {
                "challenges": 1,
                "outcomes": 0
            }
        },
        "syntax": {
            "challenges": [
                "JavaScript as a whole. It's syntax confuses me."
            ],
            "outcomes": [],
            "frequency": {
                "challenges": 1,
                "outcomes": 0
            }
        },
        "dom": {
            "challenges": [],
            "outcomes": [
                "The introduction of JS and the various associated concept areas like DOM. Great to learn more about JS syntax and symbols. Looking at the progress of JS from 1995, it is most likely to survive for a long period of time."
            ],
            "frequency": {
                "challenges": 0,
                "outcomes": 1
            }
        },
        "ecmascript": {
            "challenges": [],
            "outcomes": [
                "JavaScript/ECMAScript"
            ],
            "frequency": {
                "challenges": 0,
                "outcomes": 1
            }
        },
        "set_collection": {
            "challenges": [],
            "outcomes": [
                "Set Collection",
                "Both Map and Set collection is are new concepts to me."
            ],
            "frequency": {
                "challenges": 0,
                "outcomes": 2
            }
        },
        "variable": {
            "challenges": [],
            "outcomes": [
                "I often have used JavaSript for developing the frontend, but I did not have a chance to look over the history of the language. The history section was interesting to me. Also, It is very interesting to know there is no official documentation about JavaScript. Also, I thought I know much about JavaScript features, but the lectures introduce features that I did not know before (such as setting the default value of a function, setting a function variable in an object, etc)."
            ],
            "frequency": {
                "challenges": 0,
                "outcomes": 1
            }
        },
        "web_service": {
            "challenges": [],
            "outcomes": [
                "The concept of Web service"
            ],
            "frequency": {
                "challenges": 0,
                "outcomes": 1
            }
        },
        "__participants": 18,
        "challenge_topics": [
            "javascript",
            "object",
            "json",
            "j",
            "set",
            "map",
            "collection",
            "closure",
            "rest",
            "soap",
            "syntax",
            "dom",
            "ecmascript",
            "set_collection",
            "variable",
            "web_service"
        ],
        "outcome_topics": [
            "javascript",
            "object",
            "closure",
            "set_collection",
            "j",
            "map",
            "dom",
            "ecmascript",
            "variable",
            "web_service",
            "json",
            "set",
            "collection",
            "rest",
            "soap",
            "syntax"
        ],
        "challenge_topics_freq": [
            3,
            2,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            0,
            0,
            0
        ],
        "outcome_topics_freq": [
            9,
            2,
            2,
            2,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            0
        ]
    },
    "3": {
        "javascript": {
            "challenges": [
                "JavaScript classes and scope\nBad Code \"Smells\"",
                "The concept I found more challenging is closures and stack frames as they are more used in javaScript.",
                "Exporting within Javascript"
            ],
            "outcomes": [
                "JavaScript classes",
                "Great to know what a good JavaScript project design is about. I used to follow other developers' architectures but did not strongly concern about how to make low coupling and high cohesion in coding. Learning about closure and class was helpful since I was not aware of the features in JavaScript.",
                "Closures and Stack frames in the context of Javascript."
            ],
            "frequency": {
                "challenges": 3,
                "outcomes": 3
            }
        },
        "closure": {
            "challenges": [
                "Closures were a little confusing, I can't tell if this is a Java problem or any kind of programming.",
                "The concept I found more challenging is closures and stack frames as they are more used in javaScript.",
                "The concepts of closures, cohesion, and others were well explained, but I need to read more about them to grasp the concepts well.\n\nI would like to let you know that the recorded lectures will be of great help if they are available to us for revisions.",
                "Closures and stack frames.",
                "The whole concept of closures is new to me as well and is very complex to me. Would need to practice with it to get a better understanding.",
                "Modules with closures",
                "I wish the lecture contains some examples of making low coupling and high cohesion in development. Also, the concept of \"Closures\" was difficult to understand. The external link was helpful to understand what the closures mean, but I am still not sure I fully understand the concept.",
                "Closures"
            ],
            "outcomes": [
                "The new concepts I learned are the closure, cohesion, and the others. It is my first time of hearing about these concepts, though I have not been exposed to a lot of coding concepts. Also, I like the demonstration made on how to install maven and other files to run WSDL.",
                "Modules with closures",
                "It was interesting to learn about closures and the upgrades in EF6.",
                "Great to know what a good JavaScript project design is about. I used to follow other developers' architectures but did not strongly concern about how to make low coupling and high cohesion in coding. Learning about closure and class was helpful since I was not aware of the features in JavaScript.",
                "Closures and Stack frames in the context of Javascript.",
                "Closures are expressions that work with variables in a specific context."
            ],
            "frequency": {
                "challenges": 8,
                "outcomes": 6
            }
        },
        "stack_frame": {
            "challenges": [
                "The concept I found more challenging is closures and stack frames as they are more used in javaScript.",
                "Closures and stack frames."
            ],
            "outcomes": [
                "Closures and Stack frames in the context of Javascript."
            ],
            "frequency": {
                "challenges": 2,
                "outcomes": 1
            }
        },
        "couple": {
            "challenges": [
                "I wish the lecture contains some examples of making low coupling and high cohesion in development. Also, the concept of \"Closures\" was difficult to understand. The external link was helpful to understand what the closures mean, but I am still not sure I fully understand the concept."
            ],
            "outcomes": [
                "A good concept I have learned in this lecture is organizing code on the web. This includes avoiding spaghetti code and code smell that make code refactoring costly. On the other hand, using good design techniques such cohesion and low coupling, completeness, consistency, etc., make your code modular, structured, and reusable.",
                "I liked learning about the difference between coupling and cohesion. Coupling is the relationship between modules (inter-module), while cohesion is the relationship within a module (intra-module). This helped me understand that we need high cohesion, since it's easier to maintain, and low coupling.",
                "Cohesion and Coupling topics",
                "Great to know what a good JavaScript project design is about. I used to follow other developers' architectures but did not strongly concern about how to make low coupling and high cohesion in coding. Learning about closure and class was helpful since I was not aware of the features in JavaScript."
            ],
            "frequency": {
                "challenges": 1,
                "outcomes": 4
            }
        },
        "iife": {
            "challenges": [],
            "outcomes": [
                "Classes are my favorite thing as a C# .NET developer. I found IIFE interesting as well, we use those in our database often in override functions to use the base and then write on the returned object."
            ],
            "frequency": {
                "challenges": 0,
                "outcomes": 1
            }
        },
        "object": {
            "challenges": [],
            "outcomes": [
                "Classes are my favorite thing as a C# .NET developer. I found IIFE interesting as well, we use those in our database often in override functions to use the base and then write on the returned object."
            ],
            "frequency": {
                "challenges": 0,
                "outcomes": 1
            }
        },
        "j": {
            "challenges": [],
            "outcomes": [
                "Class was very interesting. I liked the fact we are having an interactive one, where we are able to build and test code during class. A great part to review was the scope of variables. Always something to have in mind with JS",
                "That the fact that JS is relatively unstructured results in code that is difficult to understand."
            ],
            "frequency": {
                "challenges": 0,
                "outcomes": 2
            }
        },
        "__participants": 15,
        "challenge_topics": [
            "closure",
            "javascript",
            "stack_frame",
            "couple",
            "iife",
            "object",
            "j"
        ],
        "outcome_topics": [
            "closure",
            "couple",
            "javascript",
            "j",
            "stack_frame",
            "iife",
            "object"
        ],
        "challenge_topics_freq": [
            8,
            3,
            2,
            1,
            0,
            0,
            0
        ],
        "outcome_topics_freq": [
            6,
            4,
            3,
            2,
            1,
            1,
            1
        ]
    },
    "4": {
        "node_package": {
            "challenges": [
                "Node package manager"
            ],
            "outcomes": [
                "Node Package",
                "None of these were new topics but node package manager is super helpful in my day to day work life."
            ],
            "frequency": {
                "challenges": 1,
                "outcomes": 2
            }
        },
        "manager": {
            "challenges": [
                "Node package manager"
            ],
            "outcomes": [
                "None of these were new topics but node package manager is super helpful in my day to day work life."
            ],
            "frequency": {
                "challenges": 1,
                "outcomes": 1
            }
        },
        "nodejs": {
            "challenges": [
                "Iam not clear about how nodeJs operates."
            ],
            "outcomes": [
                "NodeJs implementation"
            ],
            "frequency": {
                "challenges": 1,
                "outcomes": 1
            }
        },
        "ide": {
            "challenges": [],
            "outcomes": [
                "I did not find a new concept from the lecture since I used to use version control, IDE, npm, and node js."
            ],
            "frequency": {
                "challenges": 0,
                "outcomes": 1
            }
        },
        "version_control": {
            "challenges": [],
            "outcomes": [
                "I did not find a new concept from the lecture since I used to use version control, IDE, npm, and node js."
            ],
            "frequency": {
                "challenges": 0,
                "outcomes": 1
            }
        },
        "npm": {
            "challenges": [],
            "outcomes": [
                "I did not find a new concept from the lecture since I used to use version control, IDE, npm, and node js."
            ],
            "frequency": {
                "challenges": 0,
                "outcomes": 1
            }
        },
        "client": {
            "challenges": [],
            "outcomes": [
                "I love git and javascript so reading about git's flow and Node.js running on client side was fun."
            ],
            "frequency": {
                "challenges": 0,
                "outcomes": 1
            }
        },
        "javascript": {
            "challenges": [],
            "outcomes": [
                "Exciting JavaScript"
            ],
            "frequency": {
                "challenges": 0,
                "outcomes": 1
            }
        },
        "micro_api": {
            "challenges": [],
            "outcomes": [
                "Node.js, how you can create a micro API on your machine."
            ],
            "frequency": {
                "challenges": 0,
                "outcomes": 1
            }
        },
        "node_js": {
            "challenges": [],
            "outcomes": [
                "Node.js, how you can create a micro API on your machine."
            ],
            "frequency": {
                "challenges": 0,
                "outcomes": 1
            }
        },
        "git": {
            "challenges": [],
            "outcomes": [
                "The most interesting concept in this module was the version control tool such as Git which makes code development more efficient across a team."
            ],
            "frequency": {
                "challenges": 0,
                "outcomes": 1
            }
        },
        "__participants": 14,
        "challenge_topics": [
            "node_package",
            "manager",
            "nodejs",
            "ide",
            "version_control",
            "npm",
            "client",
            "javascript",
            "micro_api",
            "node_js",
            "git"
        ],
        "outcome_topics": [
            "node_package",
            "manager",
            "nodejs",
            "ide",
            "version_control",
            "npm",
            "client",
            "javascript",
            "micro_api",
            "node_js",
            "git"
        ],
        "challenge_topics_freq": [
            1,
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
        ],
        "outcome_topics_freq": [
            2,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1
        ]
    },
    "5": {
        "wsdl": {
            "challenges": [
                "WSDL Structure"
            ],
            "outcomes": [
                "These are the two design approaches. It is great to know that the top down approach is the most used.\nAlso, another area which attracted my attention is the WSDL descriptors which are useful in defining messages and operations.",
                "One of the nice things I noticed what the various libraries that are available to use WSDL files."
            ],
            "frequency": {
                "challenges": 1,
                "outcomes": 2
            }
        },
        "wcf": {
            "challenges": [
                "None of it was challenging, I develop and maintain a WCF web service for work so I'm pretty familiar with SOAP and dealing with WSDLs"
            ],
            "outcomes": [],
            "frequency": {
                "challenges": 1,
                "outcomes": 0
            }
        },
        "soap": {
            "challenges": [
                "None of it was challenging, I develop and maintain a WCF web service for work so I'm pretty familiar with SOAP and dealing with WSDLs",
                "I wishes to know the Chrome plugins and extensions you shared, but the link was not valid. I hope you can fix the link for the next time (Boomerang - SOAP & REST Client in slide 34)."
            ],
            "outcomes": [],
            "frequency": {
                "challenges": 2,
                "outcomes": 0
            }
        },
        "web_service": {
            "challenges": [
                "None of it was challenging, I develop and maintain a WCF web service for work so I'm pretty familiar with SOAP and dealing with WSDLs",
                "Creating the web service and all of its components"
            ],
            "outcomes": [
                "web service provider generation",
                "The entire development of a web service provider"
            ],
            "frequency": {
                "challenges": 2,
                "outcomes": 2
            }
        },
        "rest": {
            "challenges": [
                "I wishes to know the Chrome plugins and extensions you shared, but the link was not valid. I hope you can fix the link for the next time (Boomerang - SOAP & REST Client in slide 34)."
            ],
            "outcomes": [],
            "frequency": {
                "challenges": 1,
                "outcomes": 0
            }
        },
        "client": {
            "challenges": [
                "I wishes to know the Chrome plugins and extensions you shared, but the link was not valid. I hope you can fix the link for the next time (Boomerang - SOAP & REST Client in slide 34)."
            ],
            "outcomes": [],
            "frequency": {
                "challenges": 1,
                "outcomes": 0
            }
        },
        "chrome": {
            "challenges": [
                "I wishes to know the Chrome plugins and extensions you shared, but the link was not valid. I hope you can fix the link for the next time (Boomerang - SOAP & REST Client in slide 34)."
            ],
            "outcomes": [],
            "frequency": {
                "challenges": 1,
                "outcomes": 0
            }
        },
        "__participants": 8,
        "challenge_topics": [
            "soap",
            "web_service",
            "wsdl",
            "wcf",
            "rest",
            "client",
            "chrome"
        ],
        "outcome_topics": [
            "wsdl",
            "web_service",
            "wcf",
            "soap",
            "rest",
            "client",
            "chrome"
        ],
        "challenge_topics_freq": [
            2,
            2,
            1,
            1,
            1,
            1,
            1
        ],
        "outcome_topics_freq": [
            2,
            2,
            0,
            0,
            0,
            0,
            0
        ]
    },
    "6": {
        "soap": {
            "challenges": [],
            "outcomes": [
                "SOAP WS Standards"
            ],
            "frequency": {
                "challenges": 0,
                "outcomes": 1
            }
        },
        "wsdl": {
            "challenges": [],
            "outcomes": [
                "I had no idea about the standards and data that is captured in WSDL files."
            ],
            "frequency": {
                "challenges": 0,
                "outcomes": 1
            }
        },
        "service": {
            "challenges": [],
            "outcomes": [
                "Service Composition: I experienced it when I research on web service for one of our discussions."
            ],
            "frequency": {
                "challenges": 0,
                "outcomes": 1
            }
        },
        "web_service": {
            "challenges": [],
            "outcomes": [
                "Service Composition: I experienced it when I research on web service for one of our discussions.",
                "The authentication portion of web services and exchanging binary files. Having a background in security helps a lot with understanding the concepts."
            ],
            "frequency": {
                "challenges": 0,
                "outcomes": 2
            }
        },
        "__participants": 6,
        "challenge_topics": [
            "soap",
            "wsdl",
            "service",
            "web_service"
        ],
        "outcome_topics": [
            "web_service",
            "soap",
            "wsdl",
            "service"
        ],
        "challenge_topics_freq": [
            0,
            0,
            0,
            0
        ],
        "outcome_topics_freq": [
            2,
            1,
            1,
            1
        ]
    },
    "7": {
        "application": {
            "challenges": [
                "The state and stateless concepts. I am studing these concepts to understand their functionalities in the actual applications.",
                "Caching and layering in REST were challenging to understand for me. I hope there are tutorials to learn how to apply caching and layering techniques in REST applications."
            ],
            "outcomes": [
                "I did not know what statelessness is in REST, but the lecture helped me to understand the concept of state and the reason that the state of the application is not maintained in REST architecture."
            ],
            "frequency": {
                "challenges": 2,
                "outcomes": 1
            }
        },
        "rest": {
            "challenges": [
                "Caching and layering in REST were challenging to understand for me. I hope there are tutorials to learn how to apply caching and layering techniques in REST applications."
            ],
            "outcomes": [
                "It was nice going over the differences between SOAP and REST as it's always a confusing topic",
                "I did not know what statelessness is in REST, but the lecture helped me to understand the concept of state and the reason that the state of the application is not maintained in REST architecture."
            ],
            "frequency": {
                "challenges": 1,
                "outcomes": 2
            }
        },
        "soap": {
            "challenges": [],
            "outcomes": [
                "It was nice going over the differences between SOAP and REST as it's always a confusing topic"
            ],
            "frequency": {
                "challenges": 0,
                "outcomes": 1
            }
        },
        "client": {
            "challenges": [],
            "outcomes": [
                "State and stateless concepts, where state session implies the maintaining of content transferred from client to server and the reverse action of the transaction. Especially, where multiple repsenation are acepted. \nThe stateless, where the receiver does not retain session state from previous requests."
            ],
            "frequency": {
                "challenges": 0,
                "outcomes": 1
            }
        },
        "web_service": {
            "challenges": [],
            "outcomes": [
                "RESTful Web services",
                "What I learned in this module is the Java API JAX-RS which provides functionalities to interface with REST web services."
            ],
            "frequency": {
                "challenges": 0,
                "outcomes": 2
            }
        },
        "architecture": {
            "challenges": [],
            "outcomes": [
                "I did not know what statelessness is in REST, but the lecture helped me to understand the concept of state and the reason that the state of the application is not maintained in REST architecture."
            ],
            "frequency": {
                "challenges": 0,
                "outcomes": 1
            }
        },
        "__participants": 5,
        "challenge_topics": [
            "application",
            "rest",
            "soap",
            "client",
            "web_service",
            "architecture"
        ],
        "outcome_topics": [
            "rest",
            "web_service",
            "application",
            "soap",
            "client",
            "architecture"
        ],
        "challenge_topics_freq": [
            2,
            1,
            0,
            0,
            0,
            0
        ],
        "outcome_topics_freq": [
            2,
            2,
            1,
            1,
            1,
            1
        ]
    },
    "8": {
        "soa": {
            "challenges": [
                "The concept I found to be more challenging is gaining a clear differentiation between Monolithic System Architecture versus Service Oriented Architecture (SOA)."
            ],
            "outcomes": [],
            "frequency": {
                "challenges": 1,
                "outcomes": 0
            }
        },
        "architecture": {
            "challenges": [
                "The concept I found to be more challenging is gaining a clear differentiation between Monolithic System Architecture versus Service Oriented Architecture (SOA)."
            ],
            "outcomes": [
                "The most interesting new concept I learned in today's lecture is the microservices architecture.",
                "The most interesting concepts in this module were the constraints on the use of either microservices architecture, monolithic architecture, or service-oriented architecture. Each of those depends on the complexity and the cost of the application under built"
            ],
            "frequency": {
                "challenges": 1,
                "outcomes": 2
            }
        },
        "microservice": {
            "challenges": [
                "Microservices"
            ],
            "outcomes": [
                "The most interesting new concept I learned in today's lecture is the microservices architecture.",
                "Microservices",
                "The most interesting concepts in this module were the constraints on the use of either microservices architecture, monolithic architecture, or service-oriented architecture. Each of those depends on the complexity and the cost of the application under built",
                "Microservices"
            ],
            "frequency": {
                "challenges": 1,
                "outcomes": 4
            }
        },
        "application": {
            "challenges": [],
            "outcomes": [
                "The most interesting concepts in this module were the constraints on the use of either microservices architecture, monolithic architecture, or service-oriented architecture. Each of those depends on the complexity and the cost of the application under built"
            ],
            "frequency": {
                "challenges": 0,
                "outcomes": 1
            }
        },
        "__participants": 4,
        "challenge_topics": [
            "soa",
            "architecture",
            "microservice",
            "application"
        ],
        "outcome_topics": [
            "microservice",
            "architecture",
            "application",
            "soa"
        ],
        "challenge_topics_freq": [
            1,
            1,
            1,
            0
        ],
        "outcome_topics_freq": [
            4,
            2,
            1,
            0
        ]
    },
    "9": {
        "microservice": {
            "challenges": [
                "Microservices"
            ],
            "outcomes": [
                "The most interesting concepts I learned in this module were the microservices goal to support failurewich are:\n1. Design for idempotency by being able to retry requests without\nintroducing corrupt data\n2. Design for data locality to ease transactions across microservices\n3. Design for eventual consistency",
                "Microservices"
            ],
            "frequency": {
                "challenges": 1,
                "outcomes": 2
            }
        },
        "__participants": 3,
        "challenge_topics": [
            "microservice"
        ],
        "outcome_topics": [
            "microservice"
        ],
        "challenge_topics_freq": [
            1
        ],
        "outcome_topics_freq": [
            2
        ]
    }
}