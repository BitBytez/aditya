{"1": {"__participants": 20, "wsdl": {"outcomes": ["the most significant concept I learned through the lecture notes are SOAP Web Services, SOAP-based architecture, and WSDL", "The most interesting concept I learned was about the breakdown of SOAP structure. I also found the WSDL to be interesting, the idea that the service can give consumers a definition of itself and how to use it.", "Learning about SOAP and how it works. I had used REST APIs, but not the SOAP nor the WSDL", "WSDL topic"], "challenges": ["WSDL and SOAP based web services", "Understanding the WSDL and UDDL concepts were challenging to understand for me. The external documents helped me to understand the concept of WSDL, but I was failed to follow the demo section (Consuming a Web Service using CXF slide). I did create a Maven project and added all dependencies and plugins in the pom.xml file just like the slides shows. However, when I load the Maven project, no source code is generated. I will research further on the \"cxf-codegen-plugin\" to fix my issue.", "The most challenging concept is WSDL."], "frequency": {"outcomes": 4, "challenges": 4}}, "soap_web_services": {"outcomes": ["the most significant concept I learned through the lecture notes are SOAP Web Services, SOAP-based architecture, and WSDL", "The most interesting was just learning the principles of SOAP Web services. I developed WCF and REST Web services in the past for work or school but know the ins and out makes everything click a little better for me."], "challenges": [], "frequency": {"outcomes": 2, "challenges": 0}}, "soap-based": {"outcomes": ["the most significant concept I learned through the lecture notes are SOAP Web Services, SOAP-based architecture, and WSDL"], "challenges": [], "frequency": {"outcomes": 1, "challenges": 0}}, "architecture": {"outcomes": ["the most significant concept I learned through the lecture notes are SOAP Web Services, SOAP-based architecture, and WSDL", "Differentiating Service-Oriented Architecture (SOA) from the order computer applications.", "The presentation easily explained what web services are and the use cases. I like the detailed explanation of Simple Object Access Protocol (SOAP). When I tried to understand SOAP architecture in the past, it was not successful. However, your presentation's SOAP use scenario, components, and example helped me to fully understand what is SOAP architecture. Another interesting concept was that web services are a type of API (I did not aware of that before.)"], "challenges": ["The step by step approach to developing quality Service-Oriented Architecture (SOA), though this concept is yet to be explained."], "frequency": {"outcomes": 4, "challenges": 1}}, "service-oriented": {"outcomes": ["Differentiating Service-Oriented Architecture (SOA) from the order computer applications."], "challenges": ["The step by step approach to developing quality Service-Oriented Architecture (SOA), though this concept is yet to be explained."], "frequency": {"outcomes": 1, "challenges": 1}}, "soa": {"outcomes": ["I found SOA interesting.", "Differentiating Service-Oriented Architecture (SOA) from the order computer applications.", "Service Oriented Architecture (SOA) is a new concept for me. The Web Services portion really helped me understand SOA as well.", "SOA and its benefits"], "challenges": ["The step by step approach to developing quality Service-Oriented Architecture (SOA), though this concept is yet to be explained."], "frequency": {"outcomes": 5, "challenges": 1}}, "computer": {"outcomes": ["Differentiating Service-Oriented Architecture (SOA) from the order computer applications."], "challenges": [], "frequency": {"outcomes": 1, "challenges": 0}}, "application": {"outcomes": ["Differentiating Service-Oriented Architecture (SOA) from the order computer applications.", "The difference between a SOAP and REST web service. The web application I work on utilizes XML documents sometimes and I wasn't sure what the use was for. I definitely prefer REST as it's what I understand and work on for the most part."], "challenges": ["Distributed Applications"], "frequency": {"outcomes": 2, "challenges": 1}}, "soap": {"outcomes": ["Learning about SOAP and how it works. I had used REST APIs, but not the SOAP nor the WSDL", "SOAP usage scenario and SOAP message components", "For the first time, I've begun to understand the relationship and differences between REST and SOAP, that they conceptually provide a comparable function within programming, but that REST communicates largely through the URL while SOAP uses XML within a SOAP envelope, within HTTP. I also began to get some understanding of SOAP. These understanding were largely from external reading necessary to understand the slides.", "The difference between a SOAP and REST web service. The web application I work on utilizes XML documents sometimes and I wasn't sure what the use was for. I definitely prefer REST as it's what I understand and work on for the most part.", "The presentation easily explained what web services are and the use cases. I like the detailed explanation of Simple Object Access Protocol (SOAP). When I tried to understand SOAP architecture in the past, it was not successful. However, your presentation's SOAP use scenario, components, and example helped me to fully understand what is SOAP architecture. Another interesting concept was that web services are a type of API (I did not aware of that before.)", "The most interesting concept I learned was about the breakdown of SOAP structure. I also found the WSDL to be interesting, the idea that the service can give consumers a definition of itself and how to use it.", "Web services. SOAP and REST services and difference between them."], "challenges": ["WSDL and SOAP based web services", "The concepts of SOAP and REST. I've heard of both throughout numerous job descriptions for Web Developers, however, I never learned about them.", "The concepts weren't really challenging to understand but learning about SOAP Web Service was new and it took more time to understand as opposed to the other concepts discussed in the chapter.", "consuming SOAP web service, Apache CXF, Maven"], "frequency": {"outcomes": 14, "challenges": 4}}, "rest": {"outcomes": ["For the first time, I've begun to understand the relationship and differences between REST and SOAP, that they conceptually provide a comparable function within programming, but that REST communicates largely through the URL while SOAP uses XML within a SOAP envelope, within HTTP. I also began to get some understanding of SOAP. These understanding were largely from external reading necessary to understand the slides.", "The difference between a SOAP and REST web service. The web application I work on utilizes XML documents sometimes and I wasn't sure what the use was for. I definitely prefer REST as it's what I understand and work on for the most part.", "Learning about SOAP and how it works. I had used REST APIs, but not the SOAP nor the WSDL", "The most interesting was just learning the principles of SOAP Web services. I developed WCF and REST Web services in the past for work or school but know the ins and out makes everything click a little better for me."], "challenges": ["The concepts of SOAP and REST. I've heard of both throughout numerous job descriptions for Web Developers, however, I never learned about them."], "frequency": {"outcomes": 6, "challenges": 1}}, "apis": {"outcomes": ["Learning about SOAP and how it works. I had used REST APIs, but not the SOAP nor the WSDL"], "challenges": [], "frequency": {"outcomes": 1, "challenges": 0}}, "cxf": {"outcomes": ["Consuming a Web Service using CXF."], "challenges": ["Understanding the WSDL and UDDL concepts were challenging to understand for me. The external documents helped me to understand the concept of WSDL, but I was failed to follow the demo section (Consuming a Web Service using CXF slide). I did create a Maven project and added all dependencies and plugins in the pom.xml file just like the slides shows. However, when I load the Maven project, no source code is generated. I will research further on the \"cxf-codegen-plugin\" to fix my issue.", "consuming SOAP web service, Apache CXF, Maven", "The CXF and Maven slides were challenging as I have no experience using either."], "frequency": {"outcomes": 1, "challenges": 3}}, "web_service": {"outcomes": ["The most interesting concept I learned in this lecture was the difference between a simple web page or website as compared to a web service. When we are looking at a web page, we are interacting with a user interface, however, for a web service, it is an Application Programming Interface (API). If we are using a browser, web pages use HTML to display information, while a web service uses JSON. In practice, however, web services are used by applications instead of browsers.", "The difference between a SOAP and REST web service. The web application I work on utilizes XML documents sometimes and I wasn't sure what the use was for. I definitely prefer REST as it's what I understand and work on for the most part.", "Consuming a Web Service using CXF."], "challenges": ["Understanding the WSDL and UDDL concepts were challenging to understand for me. The external documents helped me to understand the concept of WSDL, but I was failed to follow the demo section (Consuming a Web Service using CXF slide). I did create a Maven project and added all dependencies and plugins in the pom.xml file just like the slides shows. However, when I load the Maven project, no source code is generated. I will research further on the \"cxf-codegen-plugin\" to fix my issue.", "The concepts weren't really challenging to understand but learning about SOAP Web Service was new and it took more time to understand as opposed to the other concepts discussed in the chapter.", "consuming SOAP web service, Apache CXF, Maven", "Right now, these ideas are almost completely abstract. For example, I searched for \"10 examples of web service implementation\" to get a better understanding of what to expect, complexity of the necessary code, whether systems are in place to create the interface without having to do the coding myself. The closest I could find was a list with a paragraph describing the functionality of the services, which helped. What I would have to do is still a bit of a mystery."], "frequency": {"outcomes": 5, "challenges": 4}}, "xml": {"outcomes": ["For the first time, I've begun to understand the relationship and differences between REST and SOAP, that they conceptually provide a comparable function within programming, but that REST communicates largely through the URL while SOAP uses XML within a SOAP envelope, within HTTP. I also began to get some understanding of SOAP. These understanding were largely from external reading necessary to understand the slides.", "The difference between a SOAP and REST web service. The web application I work on utilizes XML documents sometimes and I wasn't sure what the use was for. I definitely prefer REST as it's what I understand and work on for the most part."], "challenges": [], "frequency": {"outcomes": 2, "challenges": 0}}, "web_services": {"outcomes": ["Understanding what Web Services is. I always misquoted it.", "Service Oriented Architecture (SOA) is a new concept for me. The Web Services portion really helped me understand SOA as well.", "The presentation easily explained what web services are and the use cases. I like the detailed explanation of Simple Object Access Protocol (SOAP). When I tried to understand SOAP architecture in the past, it was not successful. However, your presentation's SOAP use scenario, components, and example helped me to fully understand what is SOAP architecture. Another interesting concept was that web services are a type of API (I did not aware of that before.)", "The most interesting was just learning the principles of SOAP Web services. I developed WCF and REST Web services in the past for work or school but know the ins and out makes everything click a little better for me.", "Web services. SOAP and REST services and difference between them."], "challenges": ["WSDL and SOAP based web services"], "frequency": {"outcomes": 6, "challenges": 1}}, "interface": {"outcomes": ["The most interesting concept I learned in this lecture was the difference between a simple web page or website as compared to a web service. When we are looking at a web page, we are interacting with a user interface, however, for a web service, it is an Application Programming Interface (API). If we are using a browser, web pages use HTML to display information, while a web service uses JSON. In practice, however, web services are used by applications instead of browsers."], "challenges": ["Right now, these ideas are almost completely abstract. For example, I searched for \"10 examples of web service implementation\" to get a better understanding of what to expect, complexity of the necessary code, whether systems are in place to create the interface without having to do the coding myself. The closest I could find was a list with a paragraph describing the functionality of the services, which helped. What I would have to do is still a bit of a mystery."], "frequency": {"outcomes": 1, "challenges": 1}}, "url": {"outcomes": ["For the first time, I've begun to understand the relationship and differences between REST and SOAP, that they conceptually provide a comparable function within programming, but that REST communicates largely through the URL while SOAP uses XML within a SOAP envelope, within HTTP. I also began to get some understanding of SOAP. These understanding were largely from external reading necessary to understand the slides."], "challenges": [], "frequency": {"outcomes": 1, "challenges": 0}}, "soap_envelope": {"outcomes": ["For the first time, I've begun to understand the relationship and differences between REST and SOAP, that they conceptually provide a comparable function within programming, but that REST communicates largely through the URL while SOAP uses XML within a SOAP envelope, within HTTP. I also began to get some understanding of SOAP. These understanding were largely from external reading necessary to understand the slides."], "challenges": [], "frequency": {"outcomes": 1, "challenges": 0}}, "service_oriented_architecture": {"outcomes": ["Service Oriented Architecture (SOA) is a new concept for me. The Web Services portion really helped me understand SOA as well.", "Learning about the structure of service oriented architecture"], "challenges": [], "frequency": {"outcomes": 2, "challenges": 0}}, "uddl": {"outcomes": [], "challenges": ["Understanding the WSDL and UDDL concepts were challenging to understand for me. The external documents helped me to understand the concept of WSDL, but I was failed to follow the demo section (Consuming a Web Service using CXF slide). I did create a Maven project and added all dependencies and plugins in the pom.xml file just like the slides shows. However, when I load the Maven project, no source code is generated. I will research further on the \"cxf-codegen-plugin\" to fix my issue."], "frequency": {"outcomes": 0, "challenges": 1}}, "dependency": {"outcomes": [], "challenges": ["Understanding the WSDL and UDDL concepts were challenging to understand for me. The external documents helped me to understand the concept of WSDL, but I was failed to follow the demo section (Consuming a Web Service using CXF slide). I did create a Maven project and added all dependencies and plugins in the pom.xml file just like the slides shows. However, when I load the Maven project, no source code is generated. I will research further on the \"cxf-codegen-plugin\" to fix my issue."], "frequency": {"outcomes": 0, "challenges": 1}}, "object": {"outcomes": ["The presentation easily explained what web services are and the use cases. I like the detailed explanation of Simple Object Access Protocol (SOAP). When I tried to understand SOAP architecture in the past, it was not successful. However, your presentation's SOAP use scenario, components, and example helped me to fully understand what is SOAP architecture. Another interesting concept was that web services are a type of API (I did not aware of that before.)"], "challenges": [], "frequency": {"outcomes": 1, "challenges": 0}}, "api": {"outcomes": ["The presentation easily explained what web services are and the use cases. I like the detailed explanation of Simple Object Access Protocol (SOAP). When I tried to understand SOAP architecture in the past, it was not successful. However, your presentation's SOAP use scenario, components, and example helped me to fully understand what is SOAP architecture. Another interesting concept was that web services are a type of API (I did not aware of that before.)"], "challenges": [], "frequency": {"outcomes": 1, "challenges": 0}}, "rest_services": {"outcomes": ["Web services. SOAP and REST services and difference between them."], "challenges": [], "frequency": {"outcomes": 1, "challenges": 0}}, "eclipse": {"outcomes": [], "challenges": ["The Eclipse set up but that's just because I'm not a well versed as I should be due to being a C# developer."], "frequency": {"outcomes": 0, "challenges": 1}}, "set": {"outcomes": [], "challenges": ["The Eclipse set up but that's just because I'm not a well versed as I should be due to being a C# developer."], "frequency": {"outcomes": 0, "challenges": 1}}, "wcf": {"outcomes": ["The most interesting was just learning the principles of SOAP Web services. I developed WCF and REST Web services in the past for work or school but know the ins and out makes everything click a little better for me."], "challenges": [], "frequency": {"outcomes": 1, "challenges": 0}}, "websockets": {"outcomes": ["I'm unable to attend the Tuesday night session so I haven't seen/heard the lecture. I was surprised that webSockets and GraphQL weren't included as well considering how wide spread there use is now."], "challenges": [], "frequency": {"outcomes": 1, "challenges": 0}}, "graphql": {"outcomes": ["I'm unable to attend the Tuesday night session so I haven't seen/heard the lecture. I was surprised that webSockets and GraphQL weren't included as well considering how wide spread there use is now."], "challenges": [], "frequency": {"outcomes": 1, "challenges": 0}}, "simple_web_page": {"outcomes": ["The most interesting concept I learned in this lecture was the difference between a simple web page or website as compared to a web service. When we are looking at a web page, we are interacting with a user interface, however, for a web service, it is an Application Programming Interface (API). If we are using a browser, web pages use HTML to display information, while a web service uses JSON. In practice, however, web services are used by applications instead of browsers."], "challenges": [], "frequency": {"outcomes": 1, "challenges": 0}}, "website": {"outcomes": ["The most interesting concept I learned in this lecture was the difference between a simple web page or website as compared to a web service. When we are looking at a web page, we are interacting with a user interface, however, for a web service, it is an Application Programming Interface (API). If we are using a browser, web pages use HTML to display information, while a web service uses JSON. In practice, however, web services are used by applications instead of browsers."], "challenges": [], "frequency": {"outcomes": 1, "challenges": 0}}, "application_programming_interface": {"outcomes": ["The most interesting concept I learned in this lecture was the difference between a simple web page or website as compared to a web service. When we are looking at a web page, we are interacting with a user interface, however, for a web service, it is an Application Programming Interface (API). If we are using a browser, web pages use HTML to display information, while a web service uses JSON. In practice, however, web services are used by applications instead of browsers."], "challenges": [], "frequency": {"outcomes": 1, "challenges": 0}}, "javascript": {"outcomes": ["JavaScript"], "challenges": [], "frequency": {"outcomes": 1, "challenges": 0}}, "achitecture": {"outcomes": [], "challenges": ["Service Oriented Achitecture"], "frequency": {"outcomes": 0, "challenges": 1}}}, "2": {"__participants": 18, "javascript": {"outcomes": ["JavaScript. It's not a language that I have used before.", "It was a great lecture on implementing WSDL and Javascript.", "I often have used JavaSript for developing the frontend, but I did not have a chance to look over the history of the language. The history section was interesting to me. Also, It is very interesting to know there is no official documentation about JavaScript. Also, I thought I know much about JavaScript features, but the lectures introduce features that I did not know before (such as setting the default value of a function, setting a function variable in an object, etc).", "I'm pretty familiar with javascript and functions so the history part was probably most interesting. I also didn't realize there isn't any \"official\" documentation for javascript.", "JavaScript Review was nice because it had important concepts to remember. I do not use it on my day to day, so this review was nice.", "What I found important is about JSON, and JavaScript collection. I found that JSON is language-independent and serves to communicate data between networks. Java script Set collection and map are interesting as well, and I think the concept is more similar to Java. However, I noticed that Javascript is loose typing contrary to java and other object-oriented programming languages.", "It was refreshing and interesting to read javascript", "I had never heard of rest parameters in Javascript before! That is very interesting and can be very useful!", "Javascript makes the \u201cactions\u201d in websites. \nIt was interesting to read about the history of JavaScript and how in 1995, JavaScript was basically the way for Netscape to beat the competition. And since Netscape was one of the most he most popular browsers at the time, other browsers started adopting their own version of javascript so that websites will work on their browsers as well. Every browser had their own idea of what javascript was and there was no standard; eventually leading to ECMAScript as the standard so that everyone had the same idea of what javascript was. I also didn't know that JavaScript and Java are not related at all and that the name was simply a marketing ploy."], "challenges": ["Nothing was particularly challenging! I don't personally like JavaScript because I prefer strongly type languages so I tend to lean to Typescript more!", "JavaScript as a whole. It's syntax confuses me.", "JSON: JavaScript Object Notation", "I think the concepts discussed in this lecture such as objects and variables were pretty clear. Some of the difficult concepts I have a hard time understanding in JavaScript are Scope and Recursion."], "frequency": {"outcomes": 18, "challenges": 4}}, "rest": {"outcomes": ["I had never heard of rest parameters in Javascript before! That is very interesting and can be very useful!"], "challenges": ["I struggled to understand why SOAP(complex, slow, less efficient, hard to implement) is being discussed when there is REST(popular, fast, efficient, and easy) but after doing little research I found that SOAP is more Secure and has a use case in financial transactions."], "frequency": {"outcomes": 1, "challenges": 1}}, "json": {"outcomes": ["What I found important is about JSON, and JavaScript collection. I found that JSON is language-independent and serves to communicate data between networks. Java script Set collection and map are interesting as well, and I think the concept is more similar to Java. However, I noticed that Javascript is loose typing contrary to java and other object-oriented programming languages."], "challenges": ["JSON: JavaScript Object Notation", "I don't really see anything challenging in here, but I think it will be good to exercise with JSON object and their functions."], "frequency": {"outcomes": 2, "challenges": 2}}, "object": {"outcomes": ["I often have used JavaSript for developing the frontend, but I did not have a chance to look over the history of the language. The history section was interesting to me. Also, It is very interesting to know there is no official documentation about JavaScript. Also, I thought I know much about JavaScript features, but the lectures introduce features that I did not know before (such as setting the default value of a function, setting a function variable in an object, etc)."], "challenges": ["JSON: JavaScript Object Notation", "I don't really see anything challenging in here, but I think it will be good to exercise with JSON object and their functions.", "I think the concepts discussed in this lecture such as objects and variables were pretty clear. Some of the difficult concepts I have a hard time understanding in JavaScript are Scope and Recursion."], "frequency": {"outcomes": 1, "challenges": 3}}, "collection": {"outcomes": ["What I found important is about JSON, and JavaScript collection. I found that JSON is language-independent and serves to communicate data between networks. Java script Set collection and map are interesting as well, and I think the concept is more similar to Java. However, I noticed that Javascript is loose typing contrary to java and other object-oriented programming languages."], "challenges": ["Set and Map Collection"], "frequency": {"outcomes": 1, "challenges": 1}}, "language-independent": {"outcomes": ["What I found important is about JSON, and JavaScript collection. I found that JSON is language-independent and serves to communicate data between networks. Java script Set collection and map are interesting as well, and I think the concept is more similar to Java. However, I noticed that Javascript is loose typing contrary to java and other object-oriented programming languages."], "challenges": [], "frequency": {"outcomes": 1, "challenges": 0}}, "set_collection": {"outcomes": ["Both Map and Set collection is are new concepts to me.", "What I found important is about JSON, and JavaScript collection. I found that JSON is language-independent and serves to communicate data between networks. Java script Set collection and map are interesting as well, and I think the concept is more similar to Java. However, I noticed that Javascript is loose typing contrary to java and other object-oriented programming languages.", "Set Collection"], "challenges": [], "frequency": {"outcomes": 3, "challenges": 0}}, "js": {"outcomes": ["The introduction of JS and the various associated concept areas like DOM. Great to learn more about JS syntax and symbols. Looking at the progress of JS from 1995, it is most likely to survive for a long period of time.", "Gained a more conceptual (and therefore simpler) view of JS. I knew it had many elements of other languages, but there are only a few factors in the language itself that make it different. I feel more comfortable with my knowledge of it."], "challenges": ["Yet to find out. I need to go over the lectures for more understanding, but so far, the JS concept is great."], "frequency": {"outcomes": 4, "challenges": 1}}, "dom": {"outcomes": ["The introduction of JS and the various associated concept areas like DOM. Great to learn more about JS syntax and symbols. Looking at the progress of JS from 1995, it is most likely to survive for a long period of time."], "challenges": [], "frequency": {"outcomes": 1, "challenges": 0}}, "syntax": {"outcomes": ["The introduction of JS and the various associated concept areas like DOM. Great to learn more about JS syntax and symbols. Looking at the progress of JS from 1995, it is most likely to survive for a long period of time."], "challenges": ["JavaScript as a whole. It's syntax confuses me."], "frequency": {"outcomes": 1, "challenges": 1}}, "variable": {"outcomes": ["The most interesting concept I learned about was destructing which allows for unpacking values into variables, it's a very handy trick.", "I often have used JavaSript for developing the frontend, but I did not have a chance to look over the history of the language. The history section was interesting to me. Also, It is very interesting to know there is no official documentation about JavaScript. Also, I thought I know much about JavaScript features, but the lectures introduce features that I did not know before (such as setting the default value of a function, setting a function variable in an object, etc).", "It was interesting to know how closures work especially when closures have access to the outer \nfunction\u2019s variables even after it returns, previously I thought if func. A returns func. B, the returned functions (B) cannot have access to variables that are defined in functions A, this is very subtle to understand but I am glad it was mentioned as a note point in the lecture."], "challenges": ["I think the concepts discussed in this lecture such as objects and variables were pretty clear. Some of the difficult concepts I have a hard time understanding in JavaScript are Scope and Recursion."], "frequency": {"outcomes": 4, "challenges": 1}}, "set": {"outcomes": [], "challenges": ["Set and Map Collection"], "frequency": {"outcomes": 0, "challenges": 1}}, "map": {"outcomes": ["Both Map and Set collection is are new concepts to me."], "challenges": ["Set and Map Collection", "I don't use maps much so that part was a little confusing but not terribly so."], "frequency": {"outcomes": 1, "challenges": 2}}, "closure": {"outcomes": ["It was interesting to know how closures work especially when closures have access to the outer \nfunction\u2019s variables even after it returns, previously I thought if func. A returns func. B, the returned functions (B) cannot have access to variables that are defined in functions A, this is very subtle to understand but I am glad it was mentioned as a note point in the lecture.", "Closures"], "challenges": ["Closures topic"], "frequency": {"outcomes": 3, "challenges": 1}}, "wsdl": {"outcomes": ["It was a great lecture on implementing WSDL and Javascript."], "challenges": [], "frequency": {"outcomes": 1, "challenges": 0}}, "soap": {"outcomes": [], "challenges": ["I struggled to understand why SOAP(complex, slow, less efficient, hard to implement) is being discussed when there is REST(popular, fast, efficient, and easy) but after doing little research I found that SOAP is more Secure and has a use case in financial transactions."], "frequency": {"outcomes": 0, "challenges": 2}}, "website": {"outcomes": ["Javascript makes the \u201cactions\u201d in websites. \nIt was interesting to read about the history of JavaScript and how in 1995, JavaScript was basically the way for Netscape to beat the competition. And since Netscape was one of the most he most popular browsers at the time, other browsers started adopting their own version of javascript so that websites will work on their browsers as well. Every browser had their own idea of what javascript was and there was no standard; eventually leading to ECMAScript as the standard so that everyone had the same idea of what javascript was. I also didn't know that JavaScript and Java are not related at all and that the name was simply a marketing ploy."], "challenges": [], "frequency": {"outcomes": 2, "challenges": 0}}, "netscape": {"outcomes": ["Javascript makes the \u201cactions\u201d in websites. \nIt was interesting to read about the history of JavaScript and how in 1995, JavaScript was basically the way for Netscape to beat the competition. And since Netscape was one of the most he most popular browsers at the time, other browsers started adopting their own version of javascript so that websites will work on their browsers as well. Every browser had their own idea of what javascript was and there was no standard; eventually leading to ECMAScript as the standard so that everyone had the same idea of what javascript was. I also didn't know that JavaScript and Java are not related at all and that the name was simply a marketing ploy."], "challenges": [], "frequency": {"outcomes": 2, "challenges": 0}}, "ecmascript": {"outcomes": ["Javascript makes the \u201cactions\u201d in websites. \nIt was interesting to read about the history of JavaScript and how in 1995, JavaScript was basically the way for Netscape to beat the competition. And since Netscape was one of the most he most popular browsers at the time, other browsers started adopting their own version of javascript so that websites will work on their browsers as well. Every browser had their own idea of what javascript was and there was no standard; eventually leading to ECMAScript as the standard so that everyone had the same idea of what javascript was. I also didn't know that JavaScript and Java are not related at all and that the name was simply a marketing ploy."], "challenges": [], "frequency": {"outcomes": 1, "challenges": 0}}, "web_service": {"outcomes": ["The concept of Web service"], "challenges": [], "frequency": {"outcomes": 1, "challenges": 0}}}, "3": {"__participants": 15, "javascript": {"outcomes": ["Great to know what a good JavaScript project design is about. I used to follow other developers' architectures but did not strongly concern about how to make low coupling and high cohesion in coding. Learning about closure and class was helpful since I was not aware of the features in JavaScript.", "JavaScript classes", "Closures and Stack frames in the context of Javascript."], "challenges": ["JavaScript classes and scope\nBad Code \"Smells\"", "The concept I found more challenging is closures and stack frames as they are more used in javaScript.", "Exporting within Javascript"], "frequency": {"outcomes": 4, "challenges": 3}}, "closure": {"outcomes": ["The new concepts I learned are the closure, cohesion, and the others. It is my first time of hearing about these concepts, though I have not been exposed to a lot of coding concepts. Also, I like the demonstration made on how to install maven and other files to run WSDL.", "Great to know what a good JavaScript project design is about. I used to follow other developers' architectures but did not strongly concern about how to make low coupling and high cohesion in coding. Learning about closure and class was helpful since I was not aware of the features in JavaScript.", "Closures are expressions that work with variables in a specific context.", "Modules with closures", "It was interesting to learn about closures and the upgrades in EF6.", "Closures and Stack frames in the context of Javascript."], "challenges": ["I wish the lecture contains some examples of making low coupling and high cohesion in development. Also, the concept of \"Closures\" was difficult to understand. The external link was helpful to understand what the closures mean, but I am still not sure I fully understand the concept.", "The concepts of closures, cohesion, and others were well explained, but I need to read more about them to grasp the concepts well.\n\nI would like to let you know that the recorded lectures will be of great help if they are available to us for revisions.", "Modules with closures", "Closures", "Closures were a little confusing, I can't tell if this is a Java problem or any kind of programming.", "The whole concept of closures is new to me as well and is very complex to me. Would need to practice with it to get a better understanding.", "Closures and stack frames.", "The concept I found more challenging is closures and stack frames as they are more used in javaScript."], "frequency": {"outcomes": 6, "challenges": 9}}, ".net_developer": {"outcomes": ["Classes are my favorite thing as a C# .NET developer. I found IIFE interesting as well, we use those in our database often in override functions to use the base and then write on the returned object."], "challenges": [], "frequency": {"outcomes": 1, "challenges": 0}}, "iife": {"outcomes": ["Classes are my favorite thing as a C# .NET developer. I found IIFE interesting as well, we use those in our database often in override functions to use the base and then write on the returned object."], "challenges": [], "frequency": {"outcomes": 1, "challenges": 0}}, "object": {"outcomes": ["Classes are my favorite thing as a C# .NET developer. I found IIFE interesting as well, we use those in our database often in override functions to use the base and then write on the returned object."], "challenges": [], "frequency": {"outcomes": 1, "challenges": 0}}, "stack_frames": {"outcomes": ["Closures and Stack frames in the context of Javascript."], "challenges": ["Closures and stack frames.", "The concept I found more challenging is closures and stack frames as they are more used in javaScript."], "frequency": {"outcomes": 1, "challenges": 2}}, "coupling": {"outcomes": ["A good concept I have learned in this lecture is organizing code on the web. This includes avoiding spaghetti code and code smell that make code refactoring costly. On the other hand, using good design techniques such cohesion and low coupling, completeness, consistency, etc., make your code modular, structured, and reusable.", "Cohesion and Coupling topics", "I liked learning about the difference between coupling and cohesion. Coupling is the relationship between modules (inter-module), while cohesion is the relationship within a module (intra-module). This helped me understand that we need high cohesion, since it's easier to maintain, and low coupling.", "Great to know what a good JavaScript project design is about. I used to follow other developers' architectures but did not strongly concern about how to make low coupling and high cohesion in coding. Learning about closure and class was helpful since I was not aware of the features in JavaScript."], "challenges": ["I wish the lecture contains some examples of making low coupling and high cohesion in development. Also, the concept of \"Closures\" was difficult to understand. The external link was helpful to understand what the closures mean, but I am still not sure I fully understand the concept."], "frequency": {"outcomes": 6, "challenges": 1}}, "pattern": {"outcomes": ["I love the design for reuse section. At work, I've implemented multiple design patterns for the projects I work on that are centered around separation of concerns and reusability."], "challenges": [], "frequency": {"outcomes": 1, "challenges": 0}}, "wsdl": {"outcomes": ["The new concepts I learned are the closure, cohesion, and the others. It is my first time of hearing about these concepts, though I have not been exposed to a lot of coding concepts. Also, I like the demonstration made on how to install maven and other files to run WSDL."], "challenges": [], "frequency": {"outcomes": 1, "challenges": 0}}, "js": {"outcomes": ["That the fact that JS is relatively unstructured results in code that is difficult to understand.", "Class was very interesting. I liked the fact we are having an interactive one, where we are able to build and test code during class. A great part to review was the scope of variables. Always something to have in mind with JS"], "challenges": [], "frequency": {"outcomes": 2, "challenges": 0}}, "variable": {"outcomes": ["Closures are expressions that work with variables in a specific context.", "Class was very interesting. I liked the fact we are having an interactive one, where we are able to build and test code during class. A great part to review was the scope of variables. Always something to have in mind with JS"], "challenges": [], "frequency": {"outcomes": 2, "challenges": 0}}, "architecture": {"outcomes": ["Great to know what a good JavaScript project design is about. I used to follow other developers' architectures but did not strongly concern about how to make low coupling and high cohesion in coding. Learning about closure and class was helpful since I was not aware of the features in JavaScript."], "challenges": [], "frequency": {"outcomes": 1, "challenges": 0}}}, "4": {"__participants": 14, "git": {"outcomes": ["Used GIT before but after watching the lecture diagrams the concept is very clear.", "The most interesting concept in this module was the version control tool such as Git which makes code development more efficient across a team.", "Git", "I love git and javascript so reading about git's flow and Node.js running on client side was fun."], "challenges": [], "frequency": {"outcomes": 5, "challenges": 0}}, "cascade_pattern": {"outcomes": ["When Cascade Pattern as mentioned, I was unaware of this concept. I still need to look more into it."], "challenges": ["Since the Cascade Pattern is a new concept, it is also the one more challenging. Once I get familiar with it, I should have a better understanding of it."], "frequency": {"outcomes": 1, "challenges": 1}}, "node_package": {"outcomes": ["None of these were new topics but node package manager is super helpful in my day to day work life.", "Node Package"], "challenges": ["Node package manager"], "frequency": {"outcomes": 2, "challenges": 1}}, "version_control": {"outcomes": ["I did not find a new concept from the lecture since I used to use version control, IDE, npm, and node js.", "The most interesting concept in this module was the version control tool such as Git which makes code development more efficient across a team."], "challenges": [], "frequency": {"outcomes": 2, "challenges": 0}}, "ide": {"outcomes": ["I did not find a new concept from the lecture since I used to use version control, IDE, npm, and node js."], "challenges": [], "frequency": {"outcomes": 1, "challenges": 0}}, "npm": {"outcomes": ["I did not find a new concept from the lecture since I used to use version control, IDE, npm, and node js."], "challenges": [], "frequency": {"outcomes": 1, "challenges": 0}}, "node_js": {"outcomes": ["I did not find a new concept from the lecture since I used to use version control, IDE, npm, and node js."], "challenges": [], "frequency": {"outcomes": 1, "challenges": 0}}, "javascript": {"outcomes": ["Exciting JavaScript", "I love git and javascript so reading about git's flow and Node.js running on client side was fun."], "challenges": [], "frequency": {"outcomes": 2, "challenges": 0}}, "client": {"outcomes": ["I love git and javascript so reading about git's flow and Node.js running on client side was fun."], "challenges": [], "frequency": {"outcomes": 1, "challenges": 0}}, "manager": {"outcomes": ["None of these were new topics but node package manager is super helpful in my day to day work life."], "challenges": ["Node package manager"], "frequency": {"outcomes": 1, "challenges": 1}}, "nodejs": {"outcomes": ["NodeJs implementation"], "challenges": ["Iam not clear about how nodeJs operates."], "frequency": {"outcomes": 1, "challenges": 1}}, "micro_api": {"outcomes": ["Node.js, how you can create a micro API on your machine."], "challenges": [], "frequency": {"outcomes": 1, "challenges": 0}}}, "5": {"__participants": 8, "wsdl": {"outcomes": ["One of the nice things I noticed what the various libraries that are available to use WSDL files.", "These are the two design approaches. It is great to know that the top down approach is the most used.\nAlso, another area which attracted my attention is the WSDL descriptors which are useful in defining messages and operations."], "challenges": ["WSDL Structure"], "frequency": {"outcomes": 2, "challenges": 1}}, "wsdl_descriptor": {"outcomes": ["WSDL descriptor"], "challenges": [], "frequency": {"outcomes": 1, "challenges": 0}}, "web_service": {"outcomes": ["web service provider generation", "The entire development of a web service provider"], "challenges": ["None of it was challenging, I develop and maintain a WCF web service for work so I'm pretty familiar with SOAP and dealing with WSDLs", "Creating the web service and all of its components"], "frequency": {"outcomes": 2, "challenges": 2}}, "wcf": {"outcomes": [], "challenges": ["None of it was challenging, I develop and maintain a WCF web service for work so I'm pretty familiar with SOAP and dealing with WSDLs"], "frequency": {"outcomes": 0, "challenges": 1}}, "soap": {"outcomes": [], "challenges": ["None of it was challenging, I develop and maintain a WCF web service for work so I'm pretty familiar with SOAP and dealing with WSDLs", "I wishes to know the Chrome plugins and extensions you shared, but the link was not valid. I hope you can fix the link for the next time (Boomerang - SOAP & REST Client in slide 34)."], "frequency": {"outcomes": 0, "challenges": 2}}, "chrome": {"outcomes": [], "challenges": ["I wishes to know the Chrome plugins and extensions you shared, but the link was not valid. I hope you can fix the link for the next time (Boomerang - SOAP & REST Client in slide 34)."], "frequency": {"outcomes": 0, "challenges": 1}}, "extension": {"outcomes": [], "challenges": ["I wishes to know the Chrome plugins and extensions you shared, but the link was not valid. I hope you can fix the link for the next time (Boomerang - SOAP & REST Client in slide 34)."], "frequency": {"outcomes": 0, "challenges": 1}}, "rest": {"outcomes": [], "challenges": ["I wishes to know the Chrome plugins and extensions you shared, but the link was not valid. I hope you can fix the link for the next time (Boomerang - SOAP & REST Client in slide 34)."], "frequency": {"outcomes": 0, "challenges": 1}}, "client": {"outcomes": [], "challenges": ["I wishes to know the Chrome plugins and extensions you shared, but the link was not valid. I hope you can fix the link for the next time (Boomerang - SOAP & REST Client in slide 34)."], "frequency": {"outcomes": 0, "challenges": 1}}, "asynchronous_operation": {"outcomes": ["Great to see examples of each design approach. The most interesting part was the Asynchronous operation types (one-way and notification) and class activities."], "challenges": [], "frequency": {"outcomes": 1, "challenges": 0}}}, "6": {"__participants": 6, "soap": {"outcomes": ["SOAP WS Standards"], "challenges": [], "frequency": {"outcomes": 1, "challenges": 0}}, "wsdl": {"outcomes": ["I had no idea about the standards and data that is captured in WSDL files.", "Understanding the detailed structure of WSDL and how to develop the file. Also, I like the professor's demo video on how to use CXF. By following the professor's demo, I was able to experience developing a web service in the right way."], "challenges": [], "frequency": {"outcomes": 2, "challenges": 0}}, "cxf": {"outcomes": ["Understanding the detailed structure of WSDL and how to develop the file. Also, I like the professor's demo video on how to use CXF. By following the professor's demo, I was able to experience developing a web service in the right way."], "challenges": [], "frequency": {"outcomes": 1, "challenges": 0}}, "web_service": {"outcomes": ["Service Composition: I experienced it when I research on web service for one of our discussions.", "Understanding the detailed structure of WSDL and how to develop the file. Also, I like the professor's demo video on how to use CXF. By following the professor's demo, I was able to experience developing a web service in the right way."], "challenges": [], "frequency": {"outcomes": 2, "challenges": 0}}, "web_services": {"outcomes": ["The authentication portion of web services and exchanging binary files. Having a background in security helps a lot with understanding the concepts."], "challenges": [], "frequency": {"outcomes": 1, "challenges": 0}}}, "7": {"__participants": 5, "soap": {"outcomes": ["It was nice going over the differences between SOAP and REST as it's always a confusing topic"], "challenges": [], "frequency": {"outcomes": 1, "challenges": 0}}, "rest": {"outcomes": ["What I learned in this module is the Java API JAX-RS which provides functionalities to interface with REST web services.", "It was nice going over the differences between SOAP and REST as it's always a confusing topic", "I did not know what statelessness is in REST, but the lecture helped me to understand the concept of state and the reason that the state of the application is not maintained in REST architecture."], "challenges": ["Caching and layering in REST were challenging to understand for me. I hope there are tutorials to learn how to apply caching and layering techniques in REST applications."], "frequency": {"outcomes": 4, "challenges": 2}}, "application": {"outcomes": ["I did not know what statelessness is in REST, but the lecture helped me to understand the concept of state and the reason that the state of the application is not maintained in REST architecture."], "challenges": ["The state and stateless concepts. I am studing these concepts to understand their functionalities in the actual applications.", "Caching and layering in REST were challenging to understand for me. I hope there are tutorials to learn how to apply caching and layering techniques in REST applications."], "frequency": {"outcomes": 1, "challenges": 2}}, "client": {"outcomes": ["State and stateless concepts, where state session implies the maintaining of content transferred from client to server and the reverse action of the transaction. Especially, where multiple repsenation are acepted. \nThe stateless, where the receiver does not retain session state from previous requests."], "challenges": [], "frequency": {"outcomes": 1, "challenges": 0}}, "web_services": {"outcomes": ["What I learned in this module is the Java API JAX-RS which provides functionalities to interface with REST web services.", "RESTful Web services"], "challenges": [], "frequency": {"outcomes": 2, "challenges": 0}}, "architecture": {"outcomes": ["I did not know what statelessness is in REST, but the lecture helped me to understand the concept of state and the reason that the state of the application is not maintained in REST architecture."], "challenges": [], "frequency": {"outcomes": 1, "challenges": 0}}, "api": {"outcomes": ["What I learned in this module is the Java API JAX-RS which provides functionalities to interface with REST web services."], "challenges": [], "frequency": {"outcomes": 1, "challenges": 0}}, "interface": {"outcomes": ["What I learned in this module is the Java API JAX-RS which provides functionalities to interface with REST web services."], "challenges": [], "frequency": {"outcomes": 1, "challenges": 0}}}, "8": {"__participants": 4, "architecture": {"outcomes": ["The most interesting new concept I learned in today's lecture is the microservices architecture.", "The most interesting concepts in this module were the constraints on the use of either microservices architecture, monolithic architecture, or service-oriented architecture. Each of those depends on the complexity and the cost of the application under built"], "challenges": ["The concept I found to be more challenging is gaining a clear differentiation between Monolithic System Architecture versus Service Oriented Architecture (SOA)."], "frequency": {"outcomes": 4, "challenges": 1}}, "service_oriented_architecture": {"outcomes": [], "challenges": ["The concept I found to be more challenging is gaining a clear differentiation between Monolithic System Architecture versus Service Oriented Architecture (SOA)."], "frequency": {"outcomes": 0, "challenges": 1}}, "soa": {"outcomes": [], "challenges": ["The concept I found to be more challenging is gaining a clear differentiation between Monolithic System Architecture versus Service Oriented Architecture (SOA)."], "frequency": {"outcomes": 0, "challenges": 1}}, "microservices": {"outcomes": ["Microservices", "The most interesting new concept I learned in today's lecture is the microservices architecture.", "The most interesting concepts in this module were the constraints on the use of either microservices architecture, monolithic architecture, or service-oriented architecture. Each of those depends on the complexity and the cost of the application under built"], "challenges": ["Microservices"], "frequency": {"outcomes": 4, "challenges": 1}}, "service-oriented": {"outcomes": ["The most interesting concepts in this module were the constraints on the use of either microservices architecture, monolithic architecture, or service-oriented architecture. Each of those depends on the complexity and the cost of the application under built"], "challenges": [], "frequency": {"outcomes": 1, "challenges": 0}}, "application": {"outcomes": ["The most interesting concepts in this module were the constraints on the use of either microservices architecture, monolithic architecture, or service-oriented architecture. Each of those depends on the complexity and the cost of the application under built"], "challenges": [], "frequency": {"outcomes": 1, "challenges": 0}}}, "9": {"__participants": 3, "microservices": {"outcomes": ["The most interesting concepts I learned in this module were the microservices goal to support failurewich are:\n1. Design for idempotency by being able to retry requests without\nintroducing corrupt data\n2. Design for data locality to ease transactions across microservices\n3. Design for eventual consistency", "Microservices"], "challenges": ["Microservices"], "frequency": {"outcomes": 3, "challenges": 1}}}}